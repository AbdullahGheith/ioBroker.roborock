name: Login and fetch data

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  fetch:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install axios and crypto
      run: npm install axios crypto

    - name: Login and fetch data
      env:
        USERNAME: ${{ secrets.ROBOROCK_USERNAME }}
        PASSWORD: ${{ secrets.ROBOROCK_PASSWORD }}
      run: |
        node -e "
        const axios = require('axios');
        const crypto = require('crypto');

        const username = process.env.USERNAME;
        const password = process.env.PASSWORD;
        const clientID = crypto.randomUUID();

        const loginApi = axios.create({
          baseURL: 'https://euiot.roborock.com',
          headers: {
            'header_clientid': crypto.createHash('md5').update(username).update(clientID).digest().toString('base64'),
          },
        });

        loginApi.post('api/v1/login', new URLSearchParams({
          username: username,
          password: password,
          needtwostepauth: 'false'
        }).toString())
        .then(res => {
          loginApi.defaults.headers.common['Authorization'] = res.data.data.token;

          loginApi.get('api/v3/product')
          .then(res => {
            // Handle the response here. Note that console.log output will be visible in the GitHub Actions log.
            // console.log('Product data: ' + JSON.stringify(res.data.data.categoryDetailList));
            for (const product in res.data.data.categoryDetailList[0]) {
              if (res.data.data.categoryDetailList[0][product][0]) {
                console.log('Robot ' + res.data.data.categoryDetailList[0][product][0].name + ' id: ' + res.data.data.categoryDetailList[0][product][0].id);
              }
            }
          })
          .catch(err => console.error(err));
        })
        .catch(err => console.error(err));"
